#!/usr/bin/with-contenv bashio
# ==============================================================================
# CUPS Add-on Discovery Integration
# Creates Home Assistant entities for CUPS monitoring and control
# ==============================================================================

bashio::log.info "Setting up Home Assistant entity discovery for CUPS..."

# Device info for grouping entities
device_info='{
  "identifiers": ["cups_addon"],
  "name": "CUPS Print Server",
  "manufacturer": "OpenPrinting",
  "model": "CUPS 2.4.12",
  "sw_version": "1.2.0"
}'

# CUPS Service Status Sensor
bashio::log.info "Publishing CUPS service status sensor..."
bashio::var.json device_info \
    | jq --arg topic "homeassistant/binary_sensor/cups_addon/service_status/config" \
         --arg name "CUPS Service Status" \
         --arg unique_id "cups_addon_service_status" \
         --arg state_topic "homeassistant/binary_sensor/cups_addon/service_status/state" \
         --arg device_class "running" \
         --arg payload_on "ON" \
         --arg payload_off "OFF" \
         '. as $device | {
           "name": $name,
           "unique_id": $unique_id,
           "state_topic": $state_topic,
           "device_class": $device_class,
           "payload_on": $payload_on,
           "payload_off": $payload_off,
           "device": $device
         }' \
    | bashio::var.json \
    | mosquitto_pub -h core-mosquitto -t "homeassistant/binary_sensor/cups_addon/service_status/config" -s

# CUPS Print Jobs Sensor
bashio::log.info "Publishing CUPS print jobs sensor..."
bashio::var.json device_info \
    | jq --arg topic "homeassistant/sensor/cups_addon/print_jobs/config" \
         --arg name "CUPS Print Jobs" \
         --arg unique_id "cups_addon_print_jobs" \
         --arg state_topic "homeassistant/sensor/cups_addon/print_jobs/state" \
         --arg unit "jobs" \
         --arg icon "mdi:printer-outline" \
         '. as $device | {
           "name": $name,
           "unique_id": $unique_id,
           "state_topic": $state_topic,
           "unit_of_measurement": $unit,
           "icon": $icon,
           "device": $device
         }' \
    | bashio::var.json \
    | mosquitto_pub -h core-mosquitto -t "homeassistant/sensor/cups_addon/print_jobs/config" -s

# CUPS Service Control Switch
bashio::log.info "Publishing CUPS service control switch..."
bashio::var.json device_info \
    | jq --arg topic "homeassistant/switch/cups_addon/service_control/config" \
         --arg name "CUPS Service Control" \
         --arg unique_id "cups_addon_service_control" \
         --arg state_topic "homeassistant/switch/cups_addon/service_control/state" \
         --arg command_topic "homeassistant/switch/cups_addon/service_control/set" \
         --arg payload_on "ON" \
         --arg payload_off "OFF" \
         --arg state_on "ON" \
         --arg state_off "OFF" \
         --arg icon "mdi:power" \
         '. as $device | {
           "name": $name,
           "unique_id": $unique_id,
           "state_topic": $state_topic,
           "command_topic": $command_topic,
           "payload_on": $payload_on,
           "payload_off": $payload_off,
           "state_on": $state_on,
           "state_off": $state_off,
           "icon": $icon,
           "device": $device
         }' \
    | bashio::var.json \
    | mosquitto_pub -h core-mosquitto -t "homeassistant/switch/cups_addon/service_control/config" -s

bashio::log.info "Home Assistant entity discovery setup complete!"

# Background service to update sensor states
while true; do
    # Check service status
    if pgrep -x cupsd >/dev/null 2>&1; then
        mosquitto_pub -h core-mosquitto -t "homeassistant/binary_sensor/cups_addon/service_status/state" -m "ON"
        mosquitto_pub -h core-mosquitto -t "homeassistant/switch/cups_addon/service_control/state" -m "ON"
    else
        mosquitto_pub -h core-mosquitto -t "homeassistant/binary_sensor/cups_addon/service_status/state" -m "OFF"
        mosquitto_pub -h core-mosquitto -t "homeassistant/switch/cups_addon/service_control/state" -m "OFF"
    fi
    
    # Check print jobs count
    if command -v lpstat >/dev/null 2>&1; then
        job_count=$(lpstat -o 2>/dev/null | wc -l)
        mosquitto_pub -h core-mosquitto -t "homeassistant/sensor/cups_addon/print_jobs/state" -m "$job_count"
    else
        mosquitto_pub -h core-mosquitto -t "homeassistant/sensor/cups_addon/print_jobs/state" -m "0"
    fi
    
    sleep 30
done &

# Listen for switch commands
mosquitto_sub -h core-mosquitto -t "homeassistant/switch/cups_addon/service_control/set" | while read -r command; do
    bashio::log.info "Received switch command: $command"
    
    case "$command" in
        "ON")
            bashio::log.info "Starting CUPS via switch command..."
            curl -X POST http://localhost:8080/api/service/start
            ;;
        "OFF")
            bashio::log.info "Stopping CUPS via switch command..."
            curl -X POST http://localhost:8080/api/service/stop
            ;;
    esac
done
